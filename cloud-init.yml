#cloud-config
# DevOps Intern Assignment - Cloud-init configuration for ScamBaiter
# This file automates the setup of an EC2 instance for running the ScamBaiter application

packages:
  - docker
  - docker-compose
  - git
  - curl
  - wget

runcmd:
  # Start Docker service
  - systemctl start docker
  - systemctl enable docker
  
  # Add ec2-user to docker group
  - usermod -a -G docker ec2-user
  
  # Create application directory
  - mkdir -p /opt/scambaiter
  - cd /opt/scambaiter
  
  # Clone the repository (replace with your actual repo URL)
  - git clone https://github.com/yourusername/scambaiter.git .
  
  # Build and run the Docker container
  - docker build -t scambaiter-app:latest .
  - docker run -d --name scambaiter-app -p 80:3000 --restart unless-stopped \
    -e MONGODB_URI="mongodb+srv://rizwanpatelmalipatel:rizwan123@scambaiterscluster.4mqao.mongodb.net" \
    scambaiter-app:latest
  
  # Create a simple health check script
  - |
    cat > /opt/scambaiter/health-check.sh << 'EOF'
    #!/bin/bash
    if curl -f http://localhost:3000 > /dev/null 2>&1; then
        echo "Application is running"
    else
        echo "Application is not responding"
        exit 1
    fi
    EOF
  
  - chmod +x /opt/scambaiter/health-check.sh
  
  # Create a restart script
  - |
    cat > /opt/scambaiter/restart-app.sh << 'EOF'
    #!/bin/bash
    cd /opt/scambaiter
    docker stop scambaiter-app || true
    docker rm scambaiter-app || true
    docker build -t scambaiter-app:latest .
    docker run -d --name scambaiter-app -p 80:3000 --restart unless-stopped \
      -e MONGODB_URI="mongodb+srv://rizwanpatelmalipatel:rizwan123@scambaiterscluster.4mqao.mongodb.net" \
      scambaiter-app:latest
    echo "Application restarted successfully"
    EOF
  
  - chmod +x /opt/scambaiter/restart-app.sh

final_message: "ScamBaiter application has been deployed successfully on EC2!" 